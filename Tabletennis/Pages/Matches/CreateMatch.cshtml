@page
@model Tabletennis.Pages.Match.MatchModel
@{
    ViewData["Title"] = "Create Match";
}
<div class="container mt-5">
    <div class="card shadow-sm">
        <div class="card-header text-white" style="background-color: #c4553e;">
            <h4 class="mb-0">Create New Match</h4>
        </div>
        <div class="card-body">
            <form method="post">
                <div class="row">
                    <div class="col-md-6">
                        <label>Search Player</label>
                        <select id="searchPlayer" name="searchPlayer" class="form-control custom-select">
                            <option value=""></option>
                            @foreach (var player in Model.MatchVM.AllPlayers)
                            {
                                var fullName = !string.IsNullOrWhiteSpace(player.FullName)
                                ? player.FullName
                                : $"{player.FirstName} {player.LastName}".Trim();

                                if (string.IsNullOrWhiteSpace(fullName)) fullName = "Unnamed Player";

                                var birthYear = player.Birthday.HasValue && player.Birthday != DateOnly.MinValue
                                ? player.Birthday.Value.Year.ToString()
                                : "N/A";

                                <option value="@player.PlayerId"
                                        data-fullname="@fullName"
                                        data-birthyear="@birthYear">
                                    @fullName (@birthYear)
                                </option>
                            }
                        </select>
                    </div>
                    <div class="col-md-6">
                        <label>&nbsp;</label>
                        <a class="btn btn-secondary form-control" asp-page="/Player/Create">Register new player</a>
                    </div>
                </div>

                <div class="row mt-3">
                    <div class="col-md-6">
                        <label>Player 1</label>
                        <div class="input-group">
                            <input type="text" asp-for="MatchVM.Player1Name" id="Player1Name" class="form-control" readonly />
                            <input type="hidden" asp-for="MatchVM.Player1Id" id="Player1Id" />
                            <button type="button" class="btn btn-custom-red" onclick="clearPlayer('Player1')" style=" background-color: #c4553e;color: white;">
                                <i class="fas fa-times"></i>
                            </button>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <label>Player 2</label>
                        <div class="input-group">
                            <input type="text" asp-for="MatchVM.Player2Name" id="Player2Name" class="form-control" readonly />
                            <input type="hidden" asp-for="MatchVM.Player2Id" id="Player2Id" />
                            <button type="button" class="btn btn-custom-red" onclick="clearPlayer('Player2')" style=" background-color: #c4553e;color: white;">
                                <i class="fas fa-times"></i>
                            </button>
                        </div>
                    </div>
                </div>

                <div class="row mt-3">
                    <div class="col-md-6">
                        <label>Sets</label>
                        <select asp-for="MatchVM.SelectedSetCount" asp-items="Model.MatchVM.SetOptions" class="form-control custom-select">
                            <option value="">Select Set </option>
                        </select>
                    </div>
                    <div class="col-md-6">
                        <label>&nbsp;</label>
                        <button type="submit" class="btn text-white w-100" style="background-color: #c4553e;">
                            Create Match
                        </button>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>
@section Scripts {
    <script>
        let player1Selected = false;
        let player2Selected = false;

        $(function () {
            $('#searchPlayer').select2({
               placeholder: "Search and select player...",
               allowClear: true,
               width: '100%',

               templateResult: function (data) {
                   if (!data.id || !data.element) return data.text;

                   const $option = $(data.element);
                   const fullName = $option.data('fullname') || 'Unnamed Player';
                   const birthYear = $option.data('birthyear') || 'N/A';

                  return `${fullName} (${birthYear})`;
               },

               templateSelection: function (data) {
                  if (!data.id || !data.element) return data.text;

                  const $option = $(data.element);
                  const fullName = $option.data('fullname') || 'Unnamed Player';
                  const birthYear = $option.data('birthyear') || 'N/A';

                  return `${fullName} (${birthYear})`;
               }
            });
       

            $('#searchPlayer').on('change', function () {
                const selectedId = $(this).val();
                if (!selectedId) return;

                // Prevent duplicates
                if ($('#Player1Id').val() === selectedId || $('#Player2Id').val() === selectedId) {
                    alert('This player is already selected.');
                    $(this).val(null).trigger('change');
                    return;
                }

                if (!player1Selected) {
                    fetchPlayer(selectedId, 'Player1');
                    player1Selected = true;
                } else if (!player2Selected) {
                    fetchPlayer(selectedId, 'Player2');
                    player2Selected = true;
                } else {
                    alert('Both players are already selected.');
                    $(this).val(null).trigger('change');
                }
            });
        });

        function fetchPlayer(playerId, target) {
            $.get(`?handler=GetPlayer&id=${playerId}`, function (data) {
                console.log("Returned player:", data);

                if (data) {
                    let displayName = data.fullName;
                    if (data.birthYear) {
                        displayName += ` (${data.birthYear})`;
                    }

                    $(`#${target}Name`).val(displayName);
                    $(`#${target}Id`).val(data.playerId);

                    setTimeout(() => {
                        $('#searchPlayer').val(null).trigger('change');
                    }, 200);
                }
            });
        }

        function clearPlayer(target) {
            $(`#${target}Name`).val('');
            $(`#${target}Id`).val('');
            if (target === 'Player1') player1Selected = false;
            if (target === 'Player2') player2Selected = false;
        }
    </script>
}

