@page "{matchId:int}"
@model Tabletennis.Pages.Matches.ActiveMatchModel
@{
    ViewData["Title"] = "Active Match";

}
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.7.2/css/all.min.css"
integrity="sha512-Evv84Mr4kqVGRNSgIGL/F/aIDqQb7xQ2vcrdIwxfjThSH8CSR7PBEakCr51Ck+w+/U6swU2Im1vVX0SVk9ABhg=="
crossorigin="anonymous"
referrerpolicy="no-referrer" />

<div class="container-fluid px-0 mt-5">
    
    @if (@Model.ActiveMatchVM.IsSetCompleted)
    { 
        <partial name="_StartSet" model="Model.ActiveMatchVM" />
    }
    else if (!@Model.ActiveMatchVM.IsSetCompleted)
    {
        <partial name="_ScoreBoard" model="Model.ActiveMatchVM" />
    }
    else if (@Model.ActiveMatchVM.IsCompleted)
    {
        <partial name="_EndGame" model="Model.ActiveMatchVM" />
    }
    
</div>

@section Scripts {
    <script>
        const startTimeString = '@Model.ActiveMatchVM.StartTime?.ToString("o")';
        const startTime = startTimeString ? new Date(startTimeString) : null;
        function updateTimer() {
            if (!startTime) return;
            const now = new Date();
            const diff = Math.floor((now - startTime) / 1000);
            const min = Math.floor(diff / 60).toString().padStart(2, '0');
            const sec = (diff % 60).toString().padStart(2, '0');
            document.getElementById('match-timer').textContent = `${min}:${sec}`;
        }
        if (startTime) {
            setInterval(updateTimer, 1000);
            updateTimer();
        } else {
            document.getElementById('match-timer').textContent = '--:--';
        }
    </script>
}
